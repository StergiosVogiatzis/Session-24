@page "/transactionlist"
@inject HttpClient httpClient
@inject NavigationManager navigationManager

<h3>Transaction</h3>

<button class="btn btn-primary" @onclick="AddItem" >Add</button>
@if (isLoading)
{
    <p>Loading ...</p>
}
else{
    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th>Customer</th>
                <th>Car</th>
                <th>Manager</th>
                <th>Total Price</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach(var transaction in transactionList)
            {
                <tr>
                    
                    <td>@customers.Find(x=>x.Id == transaction.CustomerId).Name</td>     
                    <td>@cars.Find(x=>x.Id == transaction.CarId).Model</td>
                    <td>@managers.Find(x=>x.Id == transaction.ManagerId).Name</td>
                    <td>@transaction.TotalPrice</td>
                    <td>
                        <button class="btn btn-primary" @onclick="() => EditItem(transaction)">Edit</button>
                        <button class="btn btn-danger" @onclick="() => DeleteItem(transaction)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
@code{
    TransactionViewModel TransactionItems { get; set; } = new();
    private Guid newCustomerId { get; set; } = Guid.Empty;
}

