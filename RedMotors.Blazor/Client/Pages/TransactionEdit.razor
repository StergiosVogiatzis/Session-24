@page "/transactionlist/edit/{Id:guid?}"
@inject HttpClient httpClient
@inject NavigationManager navigationManager

 

<h3>Transaction Edit</h3>
@if (TransactionItem == null)
{
    <p>Loading ...</p>
}
else
{
    <div class="row">
        <div class="col-md-6">
            <label class="form-label">Customer</label>
            <CustomerSelect Customers="TransactionItem.Customers"
                            ShowPlaceholder=true
                            @bind-value="newCustomerId"/>
        </div>
        <div class="col-md-6">
            <label class="form-label">Car</label>
            <CarSelect Cars="TransactionItem.Cars"
                       ShowPlaceholder=true
                       @bind-value="newCarId"/>
        </div>
        <div class="col-md-6">
            <label class="form-label">Manager</label>
           <ManagerSelect Managers="TransactionItem.Managers" 
                          ShowPlaceholder=true
                          @bind-Value="newManagerId"/>
        </div>
    </div>

    <div class="row mt-2">
        <div class="col">
            <button class="btn btn-success" @onclick="OnSave">Save</button>
            <button class="btn btn-danger" @onclick="OnCancel">Cancel</button>
        </div>
    </div>
    <div class="card mt-2">
        <div class="card-header">
            <div>
                Engineer
            </div>
            <div class="input-group">
                <EngineerSelect Engineers="TransactionLineItem.Engineers"
                                ShowPlaceholder=true
                                @bind-Value="newEngineerId" />
            </div>
        </div>
        <div class="card-header">
            <div>
                Service Task
            </div>
            <div class="input-group">
                <ServiceTaskSelect ServiceTasks="TransactionLineItem.ServiceTasks"
                                   ShowPlaceholder=true
                                   @bind-Value="newServiceTaskId" />
            </div>
        </div>
    </div>
    <div><button class="btn btn-primary mt-2" @onclick="AddTask">Add Service Task</button></div>
    <div class="card-body">
            <table class="table table-striped table-hover">
                <thead>
                    <tr>
                        <th>Service Task</th>
                        <th>Engineer</th>
                        <th>Hours</th>
                        <th>Price Per Hour</th>
                        <th>Total Price</th>
                        <th></th>
                    </tr>
                </thead>
            </table>
     </div>
}

@code {
    [Parameter] public Guid? Id { get; set; }
    TransactionEditViewModel TransactionItem { get; set; }
    TransactionEditLineViewModel TransactionLineItem { get; set; }
    private Guid newCustomerId { get; set; } 
    private Guid newCarId { get; set; }
    private Guid newManagerId { get; set; }
    private Guid newEngineerId { get; set; }
    private Guid newServiceTaskId { get; set; }



    protected override async Task OnInitializedAsync()
    {
        //if(TransactionItem == null)
        //{
        //    TransactionItem = new TransactionEditViewModel();
        //}
        //else
        //{
        TransactionLineItem = await httpClient.GetFromJsonAsync<TransactionEditLineViewModel>($"transaction/{(Id == null ? Guid.Empty : Id)}");
        TransactionItem = await httpClient.GetFromJsonAsync<TransactionEditViewModel>($"transaction/{(Id == null ? Guid.Empty : Id)}");
        //}
    }
    protected void AddTask()
    {

    }
    protected async Task OnSave()
    {
        HttpResponseMessage response;
        if (Id == null)
        {
            TransactionLineItem.EngineerId = newEngineerId;
            TransactionLineItem.ServiceTaskId = newServiceTaskId;
            TransactionItem.CarId = newCarId;
            TransactionItem.ManagerId = newManagerId;
            TransactionItem.CustomerId = newCustomerId;
            response = await httpClient.PostAsJsonAsync("transaction", TransactionItem);
        }
        else
        {
            response = await httpClient.PutAsJsonAsync("transaction", TransactionItem);
        }
        response.EnsureSuccessStatusCode();
        navigationManager.NavigateTo("transactionlist");
    }

    protected void OnCancel()
    {
        navigationManager.NavigateTo("transactionlist");
    }
}