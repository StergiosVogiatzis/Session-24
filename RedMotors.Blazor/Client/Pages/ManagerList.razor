@page "/managerlist"

<h3>Manager List</h3>
<input @bind=managerName placeholder="Type Name..."/>
<input @bind=managerSurname placeholder="Type Surname..."/>
<input @bind=managerSalaryPerMonth placeholder="Type Salary Per Month..."/>
<button class="btn btn-primary" @onclick="AddManager">Add New Manager</button>
<table class="table table-striped table-hover">
    <thead>
        <tr>
            @*<th>ID</th>*@
            <th>Name</th>
            <th>Surname</th>
            <th>SalaryPerMonth</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach(var manager in managerList)
        {
            <tr>
                @*<td>@manager.Id</td>*@
                <td><input @bind=manager.Name/></td>
                <td><input @bind=manager.Surname/></td>
                <td><input @bind=manager.SalaryPerMonth/></td>
                <td><button class="btn btn-danger" @onclick="(e) => DeleteManager(e, manager)">Delete</button></td>
            </tr>
        }
    </tbody>
</table>
@code {
    private string? managerName { get; set; }
    private string managerSurname { get; set;}
    private decimal managerSalaryPerMonth { get; set; }

    List<ManagerListViewModel> managerList = new()
    {
        new ManagerListViewModel
        {
            Id = new Guid(),
            Name = "MockName",
            Surname = "MockSurname",
            SalaryPerMonth = 557.14M
        }
    };

    void AddManager()
    {
        if (string.IsNullOrWhiteSpace(managerName) 
        && string.IsNullOrWhiteSpace(managerSurname)
        && managerSalaryPerMonth != null) return;
        managerList.Add(new ManagerListViewModel
        {
            Id = new Guid(),
            Name = managerName,
            Surname = managerSurname,
            SalaryPerMonth = managerSalaryPerMonth
        });
    }
    void DeleteManager(MouseEventArgs e,ManagerListViewModel managerToDelete)
    {
        managerList.Remove(managerToDelete);
    }
}
